<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd">


    <!-- 配置扫描包：设置user-default-filter属性：使用默认的filter
    因此可以说use-default-filters="false"属性是专门和context:include-filter子标签一起使用，
    这样可以更加自由地指定哪些注解由扫描器扫描。其意思相当于：只扫描@xxx注解的标志的类。

    总的来说就是属性use-default-filters="false"和context:include-filter子标签一起使用，其意为：只扫描指定注解的类。
    子标签context:exclude-filter直接使用，其意为不扫描指定注解标识的类，其他相关注解标识类全部扫描。-->
    <context:component-scan base-package="com.ujiuye" use-default-filters="false">
        <!-- 指定扫描哪些注解标识的类 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 配置springmvc内部视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--多媒体视图解析器:id必须为multipartResolver？别的不好使-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!--1024:1k:*1024:1M*500:500M-->
        <property name="maxInMemorySize" value="#{500*1024*1024}"/>
    </bean>
    <!--全局类型转化器-->
    <bean id="converter" class="com.ujiuye.comm.DateTimeConverter"></bean>

    <bean id="conversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="converter"></ref>
            </set>
        </property>
    </bean>

    <!-- 如果发送的请求不想经过controller,只想直接地跳转到目标页面
        1、path=”/add” 就是你访问的路径（相当于RequestMapping(“/hello”)）
        2、view-name=”update”是你所要的视图（如update.jsp,相当于return “update”）
        配置了这个后对于/update请求,就会直接交给dispatcherServlet,然后使用ViewResolver进行解析。
        注意：
        1、使用了这个标签后必须配置 <mvc:annotation-driven />否则会造成所有的@Controller注解无法解析，导致404错误。
        2、如果请求存在处理器,则这个标签对应的请求处理将不起作用。因为请求是先去找处理器处理,如果找不到才会去找这个标签配置。
     -->
    <!--<mvc:view-controller path="/add" view-name="add"/>-->
    <!-- 配置处理静态资源文件的标签 -->
    <mvc:default-servlet-handler/>
    <!-- <mvc:annotation-driven>标签默认会开启SpringMVC的注解驱动模式，
    默认注册一个RequestMappingHandlerMapping、一个RequestMappingHandlerAdapter、
    一个ExceptionHandlerExceptionResolver。
    以支持对使用了 @RequestMapping 、 @ExceptionHandler 及其他注解的控制器方法的请求处理。 -->
    <mvc:annotation-driven conversion-service="conversionServiceFactoryBean"/>
</beans>
